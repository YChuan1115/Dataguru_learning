who[ who$Continent==7,2]
who[ who$Continent==7,1]
who[ who$Continent==1,1]
who[ who$Continent==2,1]
who[ who$Continent==3,1]
who[ who$Continent==4,1]
who[ who$Continent==5,1]
who[ who$Continent==8,1]
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,6,7,9,10,15,16,17,19,20)
| who$CountryID %in% c(25, 46, 47, 48, 51 )
,
names(who) == Adult literacy rate]
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,6,7,9,10,15,16,17,19,20)
| who$CountryID %in% c(25, 46, 47, 48, 51 )
,
grepl(" Adult literacy rate", names(who) ]
grepl(" Adult literacy rate", names(who)
grepl("Adult literacy rate", names(who))
grepl("Adult literacy rate", names(who))
grepl("literacy rate", names(who))
View(who)
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,6,7,9,10,15,16,17,19,20)
| who$CountryID %in% c(25, 46, 47, 48, 51 )
, 4 ]
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,6,7,9,10,15,16,17,19,20)
| who$CountryID %in% c(25, 46, 47, 48, 51 )
, c(1,4) ]
View(asia)
View(asia)
x<-map( regions= asia$Country )
x<-map( regions= asia$country )
names(asia) <- c("country", "literacy ")
x<-map( regions= asia$country )
View(asia)
asia <- who[ who$Continent==6
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,6,7,9,10,15,16,17,19,20)
| who$CountryID %in% c(25, 46, 47, 48, 51 )
, c(1,4) ]
names(asia) <- c("country", "literacy ")
x<-map( regions= asia$country )
View(asia)
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,6,7,9,10,15,16,17,19,20)
| who$CountryID %in% c(25, 46, 47, 48, 51 )
, c(1,4) ]
View(asia)
View(asia)
who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,6,7,9,10,15,16,17,19,20)
| who$CountryID %in% c(25, 46, 47, 48, 51 )
,  ]
names(asia) <- c("country", "literacy ")
View(asia)
View(asia)
rm(asia)
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,6,7,9,10,15,16,17,19,20)
| who$CountryID %in% c(25, 46, 47, 48, 51 )
,  ]
View(asia)
View(asia)
View(asia)
View(asia)
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,6,21)
| who$CountryID %in% c(25, 46, 47, 48, 51 )
,  ]
names(asia) <- c("country", "literacy ")
x<-map( regions= asia$country )
View(asia)
View(asia)
View(asia)
rm(asia)
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,6,21)
| who$CountryID %in% c(25, 46, 47, 48, 51 )
,  ]
View(asia)
View(asia)
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,21)
| who$CountryID %in% c(46, 47, 48, 51 )
,  ]
names(asia) <- c("country", "literacy ")
x<-map( regions= asia$country )
View(asia)
names(asia)
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,21)
| who$CountryID %in% c(46, 47, 48, 51 )
,  ]
View(asia)
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,21)
| who$CountryID %in% c( 47, 48, 51 )
,  ]
x<-map( regions= asia$country )
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,21)
| who$CountryID %in% c( 47, 48, 51 )
,  c(1,4)]
names(asia) <- c("country", "literacy ")
x<-map( regions= asia$country )
View(asia)
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,21)
| who$CountryID %in% c( 47, 48, 51 )
,  c(1,2,4)]
names(asia) <- c("country","cid", "literacy ")
View(asia)
View(asia)
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,21)
,  c(1,2,4)]
names(asia) <- c("country","cid", "literacy ")
x<-map( regions= asia$country )
who$Contury
who$Country
who$Country[ who$Continent==1]
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,7,8,9,19,21)
,  c(1,2,4)]
names(asia) <- c("country","cid", "literacy ")
x<-map( regions= asia$country )
View(asia)
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,8,9,19,21)
,  c(1,2,4)]
names(asia) <- c("country","cid", "literacy ")
x<-map( regions= asia$country )
who$Country[ who$Continent==1]
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,6,8,9,19,21)
,  c(1,2,4)]
names(asia) <- c("country","cid", "liter6acy ")
x<-map( regions= asia$country )
who$Country[ who$Continent==2]
who[who$Country who$Countryid,][ who$Continent==2]
who[c( who$Country ,who$Countryid),][ who$Continent==2]
View(txt.org)
rm(txt.org)
View(who)
who[c( who$Country ,who$CountryID),][ who$Continent==2]
who[ who$Continent==2, c(1:3)]
who[ who$Continent==3, c(1:3)]
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198)
| who$CountryID %in% c(1,6,8,9,19,21)
,  c(1,2,4)]
names(asia) <- c("country","cid", "liter6acy ")
x<-map( regions= asia$country )
who[ who$Continent==2, c(1:3)]
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198) #6
| who$CountryID %in% c(1,6,8,9,19,21) #1
| who$CountryID %in% c(90,96, 178, 186, 195 ) #2
,  c(1,2,4)]
names(asia) <- c("country","cid", "literacy ")
x<-map( regions= asia$country )
View(asia)
View(asia)
View(asia)
View(asia)
View(asia)
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198) #6
| who$CountryID %in% c(1,21) #1
| who$CountryID %in% c(90,96, 178, 186, 195 ) #2
,  c(1,2,4)]
names(asia) <- c("country","cid", "literacy ")
x<-map( regions= asia$country )
View(asia)
View(asia)
colors <- brewer.pal(7,"Reds")
View(asia)
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198) #6
| who$CountryID %in% c(1,21) #1
| who$CountryID %in% c(90,96, 178, 195 ) #2
,  c(1,2,4)]
names(asia) <- c("country","cid", "literacy ")
x<-map( regions= asia$country )
x<-map( regions= asia$country ,plot=FALSE )
sd <- data.frame(col=colors, #数值分类，顺序对应颜色
values=seq(min(x$literacy[!is.na(x$literacy)]),
max(x$literacy[!is.na(x$literacy)])*1.0001, #取1.0001因为是大于等于
length.out=7))
x$literacy
x$measure <- asia$literacy
View(asia)
View(who)
View(who)
sd <- data.frame(col=colors, #数值分类，顺序对应颜色
values=seq(min(x$measure[!is.na(x$measure)]),
max(x$measure[!is.na(x$measure)])*1.0001, #取1.0001因为是大于等于
length.out=7))
View(sd)
breaks<-sd$values
matchcol<-function(y) {  #随便给个y，匹配出颜色值，注意findInterval函数
as.character(sd$col[findInterval(y,sd$values)])
}
layout(matrix(data=c(2,1), nrow=1, ncol=2), widths=c(8,1), heights=c(8,1))
par(mar = c(20,1,20,7),oma=c(0.2,0.2,0.2,0.2),mex=0.5)
image(x=1, y=0:length(breaks),z=t(matrix(breaks))*1.001,
col=colors[1:length(breaks)-1],axes=FALSE,breaks=breaks,
xlab="", ylab="", xaxt="n") #这里画图板要拉的很大否则画不出来
axis(4,at=0:(length(breaks)-1),
labels=round(breaks),col="white",las=1)
abline(h=c(1:length(breaks)),col="white",lwd=2,xpd=F)
map("state", boundary = FALSE,col=matchcol(x$measure),
fill=TRUE,lty="blank")
map("state", col="white",add = TRUE)
title("Murder Rates by US State in 1973 \n
(arrests per 100,000 residents)", line=2)
map(regions= asia$country , boundary = FALSE,col=matchcol(x$measure),
fill=TRUE,lty="blank")
map(regions= asia$country , boundary = FALSE,col=matchcol(x$measure),
fill=TRUE,lty="blank")
dev.off()
map(regions= asia$country , boundary = FALSE,col=matchcol(x$measure),
fill=TRUE,lty="blank")
map( regions= asia$country , col="white",add = TRUE)
View(asia)
View(who)
for(i in 1:length(rownames(asia))) {
for(j in 1:length(x$names)) {
if( grepl ( rownames(asia)[i], x$names[j], ignore.case=T))
x$measure[j]<-as.double(asia$literacy[i]) #把murder数据提到map类x里面的measure里
}
}
sd <- data.frame(col=colors, #取色
values=seq(min(x$measure[!is.na(x$measure)]),
max(x$measure[!is.na(x$measure)])*1.0001,
length.out=7))
breaks <- sd$values
matchcol <- function(y) {  #颜色区间
as.character( sd$col[ findInterval( y, sd$values)])
}
map(regions= asia$country , boundary = FALSE,col=matchcol(x$measure),
fill=TRUE,lty="blank")
map( regions= asia$country , col="white",add = TRUE)
View(asia)
View(who)
head(who[ who$Continent==7,])
head(who[ who$Continent==7,c(1:4)])
asia <- who[ who$Continent==7
| who$CountryID %in% c(81,88,93,94,97,109,120,144,163,177,180,198) #6
| who$CountryID %in% c(1,21) #1
| who$CountryID %in% c(90,96, 178, 195 ) #2
,  c(1,2,5)]
names(asia) <- c("country","cid", "literacy ")
x <- map( regions= asia$country ,plot=FALSE )
colors <- brewer.pal(7,"Reds")
for(i in 1:length(rownames(asia))) { #图形数值
for(j in 1:length(x$names)) {
if( grepl ( rownames(asia)[i], x$names[j], ignore.case=T))
x$measure[j]<-as.double(asia$literacy[i])
}
}
sd <- data.frame(col=colors, #取色
values=seq(min(x$measure[!is.na(x$measure)]),
max(x$measure[!is.na(x$measure)])*1.0001,
length.out=7))
breaks <- sd$values
matchcol <- function(y) {  #颜色区间
as.character( sd$col[ findInterval( y, sd$values)])
}
View(asia)
x$measure
rownames(asia)
x$names
for(i in 1:length(rownames(asia))) { #图形数值
for(j in 1:length(x$names)) {
if( grepl ( asia$country[i], x$names[j], ignore.case=T))
x$measure[j]<-as.double(asia$literacy[i])
}
}
sd <- data.frame(col=colors, #取色
values=seq(min(x$measure[!is.na(x$measure)]),
max(x$measure[!is.na(x$measure)])*1.0001,
length.out=7))
View(sd)
breaks <- sd$values
matchcol <- function(y) {  #颜色区间
as.character( sd$col[ findInterval( y, sd$values)])
}
map(regions= asia$country , boundary = FALSE,col=matchcol(x$measure),
fill=TRUE,lty="blank")
map( regions= asia$country , col="white",add = TRUE)
title("Adult literacy rate of Asia")
View(asia)
par(mar = c(20,1,20,7),oma=c(0.2,0.2,0.2,0.2),mex=0.5)
image(x=1, y=0:length(breaks),z=t(matrix(breaks))*1.001,
col=colors[1:length(breaks)-1],axes=FALSE,breaks=breaks,
xlab="", ylab="", xaxt="n") #这里画图板要拉的很大否则画不出来
axis(4,at=0:(length(breaks)-1),
labels=round(breaks),col="white",las=1)
abline(h=c(1:length(breaks)),col="white",lwd=2,xpd=F)
image(x=1, y=0:length(breaks),z=t(matrix(breaks))*1.001,
col=colors[1:length(breaks)-1],axes=FALSE,breaks=breaks,
xlab="", ylab="", xaxt="n") #这里画图板要拉的很大否则画不出来
dev.off()
image(x=1, y=0:length(breaks),z=t(matrix(breaks))*1.001,
col=colors[1:length(breaks)-1],axes=FALSE,breaks=breaks,
xlab="", ylab="", xaxt="n") #这里画图板要拉的很大否则画不出来
axis(4,at=0:(length(breaks)-1),
labels=round(breaks),col="white",las=1)
abline(h=c(1:length(breaks)),col="white",lwd=2,xpd=F)
par(mar = c(20,1,20,7),oma=c(0.2,0.2,0.2,0.2),mex=0.5)
image(x=1, y=0:length(breaks),z=t(matrix(breaks))*1.001,
col=colors[1:length(breaks)-1],axes=FALSE,breaks=breaks,
xlab="", ylab="", xaxt="n") #这里画图板要拉的很大否则画不出来
axis(4,at=0:(length(breaks)-1),
labels=round(breaks),col="white",las=1)
abline(h=c(1:length(breaks)),col="white",lwd=2,xpd=F)
par(mar = c(20,1,20,7),oma=c(0.2,0.2,0.2,0.2),mex=0.5)
image(x=1, y=0:length(breaks),z=t(matrix(breaks))*1.001,
col=colors[1:length(breaks)-1],axes=FALSE,breaks=breaks,
xlab="", ylab="", xaxt="n") #这里画图板要拉的很大否则画不出来
axis(4,at=0:(length(breaks)-1),
labels=round(breaks),col="white",las=1)
abline(h=c(1:length(breaks)),col="white",lwd=2,xpd=F)
layout(matrix(data=c(2,1), nrow=1, ncol=2), widths=c(8,1), heights=c(8,1))
par(mar = c(20,1,20,7),oma=c(0.2,0.2,0.2,0.2),mex=0.5)
image(x=1, y=0:length(breaks),z=t(matrix(breaks))*1.001,
col=colors[1:length(breaks)-1],axes=FALSE,breaks=breaks,
xlab="", ylab="", xaxt="n") #这里画图板要拉的很大否则画不出来
layout(matrix(data=c(2,1), nrow=1, ncol=2), widths=c(8,1), heights=c(8,1))
layout(matrix(data=c(2,1), nrow=1, ncol=2), widths=c(8,1), heights=c(8,1))
dev.off()
layout(matrix(data=c(2,1), nrow=1, ncol=2), widths=c(8,1), heights=c(8,1))
# Color Scale first
par(mar = c(20,1,20,7),oma=c(0.2,0.2,0.2,0.2),mex=0.5)
image(x=1, y=0:length(breaks),z=t(matrix(breaks))*1.001,
col=colors[1:length(breaks)-1],axes=FALSE,breaks=breaks,
xlab="", ylab="", xaxt="n") #这里画图板要拉的很大否则画不出来
axis(4,at=0:(length(breaks)-1),
labels=round(breaks),col="white",las=1)
abline(h=c(1:length(breaks)),col="white",lwd=2,xpd=F)
map(regions= asia$country , boundary = FALSE,col=matchcol(x$measure),
fill=TRUE,lty="blank")
map( regions= asia$country , col="white",add = TRUE)
title("Adult literacy rate of Asia")
data <- read.table("clipboard", header=T)
View(data)
data <- read.table("clipboard", header=T)
View(data)
PCA <- princomp( data[,-1], cor = T)
pca <- princomp( data[,-1], cor = T)
summary(pac)
summary(pca)
summary(pca, loadings=T, cutoff= 0.001)
screeplot( pca )
summary(pca, loadings=T, cutoff= 0.001, type=c("barplot"))
screeplot( pca , type=c("barplot") )
screeplot( pca , type=c("lines") )
screeplot( pca , type="lines" )
biplot( pca )
biplot( pca ,pc.biplot=T)
biplot( pca ,pc.biplot=F)
predict( pac)
predict( pca)
View(data)
cbind( data[,1], predict( pca))
rank <- cbind( data[,1], predict( pca))
View(rank)
predict( pca)
rank <- cbind( data[,1], predict( pca)[,1])
View(rank)
predict( pca)[,1]
predict( pca)[1,]
summary(pca, loadings=T, cutoff= 0.001)
summary(pca, loadings=T, cutoff= 0.01)
load <- loadings(pca)
plot(load[,1:2] )
plot(load[,1:2] ); text( load[,1], load[,2] )
plot(load[,1:2] ); text( load[,1], load[,2], adj=c(0.01,0.01))
data <- read.table("clipboard", header=T)
data <- read.table("clipboard", header=T)
View(data)
data <- read.table("clipboard", header=T)
mo.lm <- lm( y~ x1+x2+x3+x4, data=data)
summary(mo.lm)
kappa(data[,-1])
pca <- princomp( ~x1+x2+x3, data=data, cor=T )
summary( pca, loadings= T)
pca <- princomp( ~x1+x2+x3+x4, data=data, cor=T )
summary( pca, loadings= T)# 第一主成分贡献98%，但考虑维度，加入第二主成分
pre <- predict( pca)
data$z1 <- pre[,1]
data$z2 <- pre[,2]
lm.p <- lm(y ~ z1+z2, data=data)
summary(lm.p)
kappa(data[,6:7])
lm.p <- lm(y ~ z1+z2, data=data)
summary(lm.p)
lm.p <- lm(y ~ z1, data=data)
summary(lm.p)
x<- c(1.000, 0.846, 0.805, 0.859, 0.473, 0.398, 0.301, 0.382,
0.846, 1.000, 0.881, 0.826, 0.376, 0.326, 0.277, 0.277,
0.805, 0.881, 1.000, 0.801, 0.380, 0.319, 0.237, 0.345,
0.859, 0.826, 0.801, 1.000, 0.436, 0.329, 0.327, 0.365,
0.473, 0.376, 0.380, 0.436, 1.000, 0.762, 0.730, 0.629,
0.398, 0.326, 0.319, 0.329, 0.762, 1.000, 0.583, 0.577,
0.301, 0.277, 0.237, 0.327, 0.730, 0.583, 1.000, 0.539,
0.382, 0.415, 0.345, 0.365, 0.629, 0.577, 0.539, 1.000)
names<-c("身高 x1", "手臂长 x2", "上肢长 x3", "下肢长 x4", "体重 x5",
"颈围 x6", "胸围 x7", "胸宽 x8")
r<-matrix(x, nrow=8, dimnames=list(names, names))
(FA1<-factanal(r,3,rot="varimax"))
factor.analy1<-function(S, m){
p<-nrow(S); diag_S<-diag(S); sum_rank<-sum(diag_S)
rowname<-paste("X", 1:p, sep="")
colname<-paste("Factor", 1:m, sep="")
A<-matrix(0, nrow=p, ncol=m,
dimnames=list(rowname, colname))
eig<-eigen(S)
for (i in 1:m)
A[,i]<-sqrt(eig$values[i])*eig$vectors[,i]
h<-diag(A%*%t(A))
rowname<-c("SS loadings", "Proportion Var", "Cumulative Var")
B<-matrix(0, nrow=3, ncol=m,
dimnames=list(rowname, colname))
for (i in 1:m){
B[1,i]<-sum(A[,i]^2)
B[2,i]<-B[1,i]/sum_rank
B[3,i]<-sum(B[1,1:i])/sum_rank
}
method<-c("Principal Component Method")
list(method=method, loadings=A,
var=cbind(common=h, spcific=diag_S-h), B=B)
}
factor.analy1(r, 2)
factor.analy2<-function(R, m, d){
p<-nrow(R); diag_R<-diag(R); sum_rank<-sum(diag_R)
rowname<-paste("X", 1:p, sep="")
colname<-paste("Factor", 1:m, sep="")
A<-matrix(0, nrow=p, ncol=m,
dimnames=list(rowname, colname))
kmax=20; k<-1; h <- diag_R-d
repeat{
diag(R)<- h; h1<-h; eig<-eigen(R)
for (i in 1:m)
A[,i]<-sqrt(eig$values[i])*eig$vectors[,i]
h<-diag(A %*% t(A))
if ((sqrt(sum((h-h1)^2))<1e-4)|k==kmax) break
k<-k+1
}
rowname<-c("SS loadings", "Proportion Var", "Cumulative Var")
B<-matrix(0, nrow=3, ncol=m,
dimnames=list(rowname, colname))
for (i in 1:m){
B[1,i]<-sum(A[,i]^2)
B[2,i]<-B[1,i]/sum_rank
B[3,i]<-sum(B[1,1:i])/sum_rank
}
method<-c("Principal Factor Method")
list(method=method, loadings=A,
var=cbind(common=h, spcific=diag_R-h), B=B, iterative=k)
}
factana2(m1, factors = 3)
(FA1<-factanal(r,3,rot="varimax"))
factor.analy2(r, 2)
factor.analy2(r, 2, d=1/diag(solve(S)))
factor.analy2(r, 2, d=1/diag(solve(r)))
solve(r)
diag(solve(r))
d=1/diag(solve(r))
d=1/diag(solve(r))
factor.analy2(r, 2,d )
(FA1<-factanal(r,2,rot="varimax"))
fa.parallel
install.packages("psych")
library(psych)
fa.parallel( r, n.obs=305 , fa="both", n.iter=100, main ="scree plots with parallel analysis")
View(r)
r<-matrix(x, nrow=8 )
fa.parallel( r, n.obs=305 , fa="both", n.iter=100, main ="scree plots with parallel analysis")
factor.analy(r, 2)
factor.analy1(r, 2)
(FA1<-factanal(r,2,rot="varimax"))
(FA1<-factanal(covmat= r,2,rot="varimax"))
(FA1<-factanal(covmat= r,factors=2,rot="varimax"))
x <- read.table("clipboard", header=T)
View(x)
factanal(x,factors=2,rot="varimax")
factanal(x,factors=3,rot="varimax")
factanal(x,factors=2,rot="varimax")
